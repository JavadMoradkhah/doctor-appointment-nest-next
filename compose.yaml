services:
  server:
    build:
      context: ./server
    restart: on-failure
    environment:
      NODE_ENV: development
    env_file: ./server/.env.dev
    ports:
      - 5000:5000
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    image: postgres:16.3-alpine3.20
    restart: always
    user: postgres
    secrets:
      - database-password
    volumes:
      - database-data:/var/lib/postgresql/data
    env_file: ./server/.env.dev
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/database-password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.5-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    expose:
      - 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - 8080:8080

volumes:
  database-data:
  redis-data:

secrets:
  database-password:
    file: ./secrets/database/password.txt
